name: CI/CD Pipeline for Call Center

on:
  push:
    branches:
      - develop
      - call-center
    paths:
      - ".github/workflows/Call-center-CICD.yml"
      - "call-center/**"

env:
  CONTAINER_NAME: "call-center"
  IMAGE_NAME: "call-center-image"
  REMOTE_PATH: "/mnt"
  
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: call-center
          sparse-checkout: call-center

      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
      
      - name: Get dependencies
        run: |
          cd call-center
          flutter upgrade
          flutter pub get
      
      - name: Build release project
        run: cd call-center && flutter build web
      
  # Deploy:
  #   runs-on: ubuntu-latest
    # steps:
      # - uses: actions/checkout@v3
      # - name: Copy folder cell-center to remote host via ssh
      #   uses: appleboy/scp-action@v0.1.4
      #   with:
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SERVER_PRIVATE_KEY }}
      #     overwrite: true
      #     source: "call-center"
      #     target: ${{ env.REMOTE_PATH }}

      # - name: Deploy to DigitalOcean Droplet
      #   uses: appleboy/ssh-action@master
      #   with:
      #     script_stop: true
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SERVER_PRIVATE_KEY }}
      #     envs: CONTAINER_NAME,IMAGE_NAME,REMOTE_PATH
      #     script: |
      #       cd /mnt/call-center 
      #       # Stop and remove the old container if it exists
      #       docker stop $(echo $CONTAINER_NAME | tr ':/' '-') || true && docker rm -f $(echo $CONTAINER_NAME | tr ':/' '-') || true
      #       # Build docker image 
      #       docker build -t ${{ env.IMAGE_NAME }}:latest .
      #       # Run a new container 
      #       docker run -d \
      #       --restart always \
      #       --name $(echo $CONTAINER_NAME | tr ':/' '-') \
      #       -p 3000:5000 \
      #        ${{ env.IMAGE_NAME }}:latest
        
        







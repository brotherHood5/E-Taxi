name: CI/CD Pipeline for Call Center

on:
  push:
    branches:
      - develop
    paths:
      - ".github/workflows/Call-center-CICD.yml"
      - "call-center/**"

env:
  CONTAINER_NAME: "call-center"
  IMAGE_NAME: "call-center-image"
  REMOTE_PATH: "/mnt"

jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
        
      # - name: checkout
      #   uses: actions/checkout@v2
      #   with:
      #     path: "call-center"

      # - name: Copy call-center to remote server
      #   uses: garygrossgarten/github-action-scp@release
      #   with:
      #     local: "call-center"
      #     remote: "/mnt/call-center"
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     privateKey: ${{ secrets.SERVER_PRIVATE_KEY }}
      - uses: actions/checkout@v3
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_PRIVATE_KEY }}
          overwrite: true
          source: "call-center/**"
          target: ${{ env.REMOTE_PATH }}

      # - name: Deploy to DigitalOcean Droplet
      #   uses: appleboy/ssh-action@master
      #   with:
      #     script_stop: true
      #     host: ${{ secrets.SERVER_HOST }}
      #     username: ${{ secrets.SERVER_USER }}
      #     key: ${{ secrets.SERVER_PRIVATE_KEY }}
      #     envs: 
      #       CONTAINER_NAME
      #       IMAGE_NAME
      #       REMOTE_PATH
      #     script: |
      #       # Build docker image
      #       docker build -t $IMAGE_NAME $(echo "$REMOTE_PATH" | tail -1 | sed 's/$/\/./' )
      #       # Stop and remove the old container if it exists
      #       docker stop $(echo $CONTAINER_NAME | tr ':/' '-') || true && docker rm -f $(echo $CONTAINER_NAME | tr ':/' '-') || true
      #       # Run a new container 
      #       docker run -d \
      #       --restart always \
      #       --name $(echo $CONTAINER_NAME | tr ':/' '-') \
      #       -p 1000:3000 \
      #       $(echo $IMAGE_NAME) \
        
        






